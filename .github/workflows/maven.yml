on:
    push:
      branches:
        - main
  #test
  jobs:
    Test:
      runs-on: ubuntu-latest
      steps:
        - name: Build PostgreSQL
          run: docker run -d -e POSTGRES_USER=mysecretuser -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 postgres
        - name: Wait for PostgreSQL to start
          run: sleep 10s
        - name: Check if Docker is running PostgreSQL
          run: docker ps
  
    Build:
      runs-on: ubuntu-latest
      needs: Test
      steps:
        # ... your existing steps
  
    SonarCloud:
      runs-on: ubuntu-latest
      needs: Build
      steps:
        # ... your existing steps
  
    Staging_DockerHub:
      runs-on: ubuntu-latest
      needs: Build
      steps:
        - name: Get artifact
          uses: actions/download-artifact@v3
          with:
            name: Build
            path: build
        - name: Unzip artifact
          run: zip -r Build.zip build/
        - name: DockerHub Login
          run: docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
        - name: Docker Setup Buildx
          uses: docker/setup-buildx-action@v3.0.0
        - name: Build Docker image
          run: docker build build/ -t mrneedhelp/adv6_ros_connect:latest
        - name: Push image to Docker Hub
          run: docker push mrneedhelp/adv6_ros_connect:latest
  
    Deploy_Azure:
      runs-on: ubuntu-latest
      needs: Staging_DockerHub
      steps:
        - name: Get artifact
          uses: actions/download-artifact@v3
          with:
            name: Build
            path: build
        - name: Unzip artifact
          run: zip -r Build.zip build/
        - name: Azure login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: Get AKS context
          run: az aks get-credentials --resource-group RGR-GripOpGeluid --name adv6nikindividual
        - name: Deploy to AKS
          run: kubectl apply -f build/deployment.yaml
  